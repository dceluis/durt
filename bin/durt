#!/usr/bin/env ruby
require_relative '../lib/durt'

# Read lines from both file or STDIN
# lines = (ARGV[0] ? IO.readlines(ARGV[0]) : ARGF.readlines).map(&:chomp)

# puts Durt::VERSION

command = ARGV[0]
options = ARGV[1..-1]

current_project = Durt::Project.current_project
plugins = current_project.plugins

if command == 'filter'
  plugins.each(&:filter)
elsif command == 'memo'
  plugins.each(&:before_pick)
  issue = plugins.map(&:pick).compact.first

  plugins.each { |plugin| plugin.before_enter(issue) }
  plugins.each { |plugin| plugin.enter(issue) }
elsif command == 'start'
  plugins.each(&:start)
elsif command == 'stop'
  plugins.each(&:stop)
elsif command == 'stats'
  Durt::Issue.active_issue.puts_stats
elsif command == 'stats-all'
  Durt::Issue.all.each(&:puts_stats)
elsif command == 'db'
  system("sqlitebrowser #{Durt::DB_PATH}")
elsif command == 'edit-estimate'
  Durt::EbsPlugin.edit_estimate(Durt::Issue.active_issue)
elsif command == '-v'
  puts Durt::VERSION
end
